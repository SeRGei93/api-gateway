version: '3.9'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"  # Только для Nginx
    networks:
      - app-network
    volumes:
      - ./api-gateway:/app
    depends_on:
      - db
      - api
      - frontend
      - auth
    command: ./api-gateway  # Обычный запуск

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      MYSQL_DATABASE: ${AUTH_DATABASE}
      MYSQL_USER: ${AUTH_USER}
      MYSQL_PASSWORD: ${AUTH_PASSWORD}
      MYSQL_HOST: ${AUTH_HOST}
      MYSQL_PORT: ${AUTH_PORT}
    ports:
      - "9096:9096"
    networks:
      - app-network
    volumes:
      - ./auth:/app
    command: ./oauth2
    depends_on:
      - db

  api:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: api
    working_dir: /var/www
    expose:
      - "9000"
    volumes:
      - ./api:/var/www
    networks:
      - app-network

  frontend:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: frontend
    working_dir: /var/www
    expose:
      - "9000"
    volumes:
      - ./frontend:/var/www
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./api:/var/www/api
      - ./frontend:/var/www/frontend
      - ./docker/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - api
      - frontend
      - api-gateway
    networks:
      - app-network
  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./docker/volumes/database:/var/lib/mysql
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge